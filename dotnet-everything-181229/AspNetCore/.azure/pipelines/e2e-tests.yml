trigger: none
phases:
- phase: Host_Windows
  queue:
    name: Hosted VS2017
    parallel: 8
    matrix:
      Portable_Node8:
        Test.RuntimeIdentifier: none
        Node.Version: 8.x
      Portable_Node10:
        Test.RuntimeIdentifier: none
        Node.Version: 10.x
      SelfContainedWindows_Node8:
        Test.RuntimeIdentifier: win-x64
        Node.Version: 8.x
      SelfContainedWindows_Node10:
        Test.RuntimeIdentifier: win-x64
        Node.Version: 10.x
      SelfContainedLinux_Node8:
        Test.RuntimeIdentifier: linux-x64
        Node.Version: 8.x
      SelfContainedLinux_Node10:
        Test.RuntimeIdentifier: linux-x64
        Node.Version: 10.x
      SelfContainedMacOs_Node8:
        Test.RuntimeIdentifier: osx-x64
        Node.Version: 8.x
      SelfContainedMacOs_Node10:
        Test.RuntimeIdentifier: osx-x64
        Node.Version: 10.x
  steps:
  - task: NodeTool@0
    displayName: Install Node $(Node.Version)
    inputs:
      versionSpec: $(Node.Version)
  - powershell: |
      test/Cli.FunctionalTests/run-tests.ps1 -ci -ProdConManifestUrl $env:PRODCONMANIFESTURL -TestRuntimeIdentifier $(Test.RuntimeIdentifier) -AdditionalRestoreSources $env:ADDITIONALRESTORESOURCES
    condition: ne(variables['PB_SkipTests'], 'true')
    displayName: Run E2E tests
  - task: PublishTestResults@2
    displayName: Publish test results
    condition: always()
    inputs:
      testRunner: vstest
      testResultsFiles: 'artifacts/logs/**/*.trx'
- phase: Host_macOS
  queue:
    name: Hosted macOS
    parallel: 8
    matrix:
      Portable_Node8:
        Test.RuntimeIdentifier: none
        Node.Version: 8.x
      Portable_Node10:
        Test.RuntimeIdentifier: none
        Node.Version: 10.x
      SelfContainedWindows_Node8:
        Test.RuntimeIdentifier: win-x64
        Node.Version: 8.x
      SelfContainedWindows_Node10:
        Test.RuntimeIdentifier: win-x64
        Node.Version: 10.x
      SelfContainedLinux_Node8:
        Test.RuntimeIdentifier: linux-x64
        Node.Version: 8.x
      SelfContainedLinux_Node10:
        Test.RuntimeIdentifier: linux-x64
        Node.Version: 10.x
      SelfContainedMacOs_Node8:
        Test.RuntimeIdentifier: osx-x64
        Node.Version: 8.x
      SelfContainedMacOs_Node10:
        Test.RuntimeIdentifier: osx-x64
        Node.Version: 10.x
  steps:
  - task: NodeTool@0
    displayName: Install Node $(Node.Version)
    inputs:
      versionSpec: $(Node.Version)
  - powershell: |
      test/Cli.FunctionalTests/run-tests.ps1 -ci -ProdConManifestUrl $env:PRODCONMANIFESTURL -TestRuntimeIdentifier $(Test.RuntimeIdentifier) -AdditionalRestoreSources $env:ADDITIONALRESTORESOURCES
    condition: ne(variables['PB_SkipTests'], 'true')
    displayName: Run E2E tests
  - task: PublishTestResults@2
    displayName: Publish test results
    condition: always()
    inputs:
      testRunner: vstest
      testResultsFiles: 'artifacts/logs/**/*.trx'
- phase: Host_Linux
  queue:
    name: Hosted Linux Preview
    parallel: 8
    matrix:
      Portable_Node8:
        Test.RuntimeIdentifier: none
        Node.Version: 8.x
      Portable_Node10:
        Test.RuntimeIdentifier: none
        Node.Version: 10.x
      SelfContainedWindows_Node8:
        Test.RuntimeIdentifier: win-x64
        Node.Version: 8.x
      SelfContainedWindows_Node10:
        Test.RuntimeIdentifier: win-x64
        Node.Version: 10.x
      SelfContainedLinux_Node8:
        Test.RuntimeIdentifier: linux-x64
        Node.Version: 8.x
      SelfContainedLinux_Node10:
        Test.RuntimeIdentifier: linux-x64
        Node.Version: 10.x
      SelfContainedMacOs_Node8:
        Test.RuntimeIdentifier: osx-x64
        Node.Version: 8.x
      SelfContainedMacOs_Node10:
        Test.RuntimeIdentifier: osx-x64
        Node.Version: 10.x
  steps:
  - task: NodeTool@0
    displayName: Install Node $(Node.Version)
    inputs:
      versionSpec: $(Node.Version)
  - powershell: |
      test/Cli.FunctionalTests/run-tests.ps1 -ci -ProdConManifestUrl $env:PRODCONMANIFESTURL -TestRuntimeIdentifier $(Test.RuntimeIdentifier) -AdditionalRestoreSources $env:ADDITIONALRESTORESOURCES
    condition: ne(variables['PB_SkipTests'], 'true')
    displayName: Run E2E tests
  - task: PublishTestResults@2
    displayName: Publish test results
    condition: always()
    inputs:
      testRunner: vstest
      testResultsFiles: 'artifacts/logs/**/*.trx'
